class Solution {
    public int[] searchRange(int[] nums, int target) {
        
        int ans[] = new int[2];
        ans[0] = getFirst(nums, target);
        ans[1] = getLast(nums, target);
        return ans;
    }
    
    public int getFirst(int[] nums, int target){
        int s = 0;
        int e = nums.length-1;
        int ans = -1;
          
        while(s<=e && s>=0 && e<nums.length)
        {
            int mid = s + (e-s)/2;
            if(nums[mid]==target)
            {
                ans = mid;
                e = mid-1;
            }
            else if(nums[mid]<target)
                s = mid+1;
            else
                e = mid-1;
        }
        return ans;
        
    }
    
    public int getLast(int[] nums, int target){
        int s = 0;
        int e = nums.length-1;
        int ans = -1;
          
        while(s<=e)
        {
            int mid = s + (e-s)/2;
            if(nums[mid]==target)
            {
                ans = mid;
                s = mid+1;
            }
            else if(nums[mid]<target)
                s = mid+1;
            else
                e = mid-1;
        }
        return ans;
        
    }
}
